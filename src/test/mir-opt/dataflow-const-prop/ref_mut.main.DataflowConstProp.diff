- // MIR for `main` before DataflowConstProp
+ // MIR for `main` after DataflowConstProp
  
  fn main() -> () {
      let mut _0: ();                      // return place in scope 0 at $DIR/ref_mut.rs:+0:11: +0:11
      let mut _1: i32;                     // in scope 0 at $DIR/ref_mut.rs:+1:9: +1:14
      let mut _7: &i32;                    // in scope 0 at $DIR/ref_mut.rs:+9:10: +9:12
      let _8: &i32;                        // in scope 0 at $DIR/ref_mut.rs:+9:10: +9:12
      let _9: i32;                         // in scope 0 at $DIR/ref_mut.rs:+9:11: +9:12
      scope 1 {
          debug a => _1;                   // in scope 1 at $DIR/ref_mut.rs:+1:9: +1:14
          let _2: &mut i32;                // in scope 1 at $DIR/ref_mut.rs:+2:9: +2:10
          scope 2 {
              debug b => _2;               // in scope 2 at $DIR/ref_mut.rs:+2:9: +2:10
              let _3: i32;                 // in scope 2 at $DIR/ref_mut.rs:+4:9: +4:10
              scope 3 {
                  debug c => _3;           // in scope 3 at $DIR/ref_mut.rs:+4:9: +4:10
                  let _4: i32;             // in scope 3 at $DIR/ref_mut.rs:+6:9: +6:10
                  scope 4 {
                      debug d => _4;       // in scope 4 at $DIR/ref_mut.rs:+6:9: +6:10
                      let mut _5: &i32;    // in scope 4 at $DIR/ref_mut.rs:+7:9: +7:14
                      scope 5 {
                          debug e => _5;   // in scope 5 at $DIR/ref_mut.rs:+7:9: +7:14
                          let _6: &mut &i32; // in scope 5 at $DIR/ref_mut.rs:+8:9: +8:10
                          scope 6 {
                              debug f => _6; // in scope 6 at $DIR/ref_mut.rs:+8:9: +8:10
                              let _10: i32; // in scope 6 at $DIR/ref_mut.rs:+10:9: +10:10
                              let mut _11: &i32; // in scope 6 at $DIR/ref_mut.rs:+9:10: +9:12
                              scope 7 {
                                  debug g => _10; // in scope 7 at $DIR/ref_mut.rs:+10:9: +10:10
                              }
                          }
                      }
                  }
              }
          }
      }
  
      bb0: {
          StorageLive(_1);                 // scope 0 at $DIR/ref_mut.rs:+1:9: +1:14
          _1 = const 0_i32;                // scope 0 at $DIR/ref_mut.rs:+1:17: +1:18
          StorageLive(_2);                 // scope 1 at $DIR/ref_mut.rs:+2:9: +2:10
          _2 = &mut _1;                    // scope 1 at $DIR/ref_mut.rs:+2:13: +2:19
          (*_2) = const 1_i32;             // scope 2 at $DIR/ref_mut.rs:+3:5: +3:11
          StorageLive(_3);                 // scope 2 at $DIR/ref_mut.rs:+4:9: +4:10
          _3 = _1;                         // scope 2 at $DIR/ref_mut.rs:+4:13: +4:14
          StorageLive(_4);                 // scope 3 at $DIR/ref_mut.rs:+6:9: +6:10
          _4 = const 0_i32;                // scope 3 at $DIR/ref_mut.rs:+6:13: +6:14
          StorageLive(_5);                 // scope 4 at $DIR/ref_mut.rs:+7:9: +7:14
          _5 = &_4;                        // scope 4 at $DIR/ref_mut.rs:+7:17: +7:19
          StorageLive(_6);                 // scope 5 at $DIR/ref_mut.rs:+8:9: +8:10
          _6 = &mut _5;                    // scope 5 at $DIR/ref_mut.rs:+8:13: +8:19
          StorageLive(_7);                 // scope 6 at $DIR/ref_mut.rs:+9:10: +9:12
          StorageLive(_8);                 // scope 6 at $DIR/ref_mut.rs:+9:10: +9:12
          _11 = const main::promoted[0];   // scope 6 at $DIR/ref_mut.rs:+9:10: +9:12
                                           // mir::Constant
                                           // + span: $DIR/ref_mut.rs:13:10: 13:12
                                           // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[0])) }
          _8 = &(*_11);                    // scope 6 at $DIR/ref_mut.rs:+9:10: +9:12
          _7 = &(*_8);                     // scope 6 at $DIR/ref_mut.rs:+9:10: +9:12
          (*_6) = move _7;                 // scope 6 at $DIR/ref_mut.rs:+9:5: +9:12
          StorageDead(_7);                 // scope 6 at $DIR/ref_mut.rs:+9:11: +9:12
          StorageDead(_8);                 // scope 6 at $DIR/ref_mut.rs:+9:12: +9:13
          StorageLive(_10);                // scope 6 at $DIR/ref_mut.rs:+10:9: +10:10
          _10 = (*_5);                     // scope 6 at $DIR/ref_mut.rs:+10:13: +10:15
          _0 = const ();                   // scope 0 at $DIR/ref_mut.rs:+0:11: +11:2
          StorageDead(_10);                // scope 6 at $DIR/ref_mut.rs:+11:1: +11:2
          StorageDead(_6);                 // scope 5 at $DIR/ref_mut.rs:+11:1: +11:2
          StorageDead(_5);                 // scope 4 at $DIR/ref_mut.rs:+11:1: +11:2
          StorageDead(_4);                 // scope 3 at $DIR/ref_mut.rs:+11:1: +11:2
          StorageDead(_3);                 // scope 2 at $DIR/ref_mut.rs:+11:1: +11:2
          StorageDead(_2);                 // scope 1 at $DIR/ref_mut.rs:+11:1: +11:2
          StorageDead(_1);                 // scope 0 at $DIR/ref_mut.rs:+11:1: +11:2
          return;                          // scope 0 at $DIR/ref_mut.rs:+11:2: +11:2
      }
  }
  
