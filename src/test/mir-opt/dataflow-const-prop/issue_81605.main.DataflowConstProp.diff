- // MIR for `main` before DataflowConstProp
+ // MIR for `main` after DataflowConstProp
  
  fn main() -> () {
      let mut _0: ();                      // return place in scope 0 at $DIR/issue_81605.rs:+0:11: +0:11
      let mut _1: !;                       // in scope 0 at $DIR/issue_81605.rs:+0:11: +3:2
      let _2: i32;                         // in scope 0 at $DIR/issue_81605.rs:+1:9: +1:10
      let mut _3: i32;                     // in scope 0 at $DIR/issue_81605.rs:+1:17: +1:41
      let mut _4: bool;                    // in scope 0 at $DIR/issue_81605.rs:+1:20: +1:24
      let _5: !;                           // in scope 0 at $DIR/issue_81605.rs:+2:5: +2:26
      let mut _6: i32;                     // in scope 0 at $DIR/issue_81605.rs:+2:24: +2:25
      scope 1 {
          debug x => _2;                   // in scope 1 at $DIR/issue_81605.rs:+1:9: +1:10
      }
  
      bb0: {
          StorageLive(_2);                 // scope 0 at $DIR/issue_81605.rs:+1:9: +1:10
          StorageLive(_3);                 // scope 0 at $DIR/issue_81605.rs:+1:17: +1:41
          StorageLive(_4);                 // scope 0 at $DIR/issue_81605.rs:+1:20: +1:24
          _4 = const true;                 // scope 0 at $DIR/issue_81605.rs:+1:20: +1:24
-         switchInt(move _4) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/issue_81605.rs:+1:20: +1:24
+         switchInt(const true) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/issue_81605.rs:+1:20: +1:24
      }
  
      bb1: {
          _3 = const 1_i32;                // scope 0 at $DIR/issue_81605.rs:+1:27: +1:28
          goto -> bb3;                     // scope 0 at $DIR/issue_81605.rs:+1:17: +1:41
      }
  
      bb2: {
          _3 = const 2_i32;                // scope 0 at $DIR/issue_81605.rs:+1:38: +1:39
          goto -> bb3;                     // scope 0 at $DIR/issue_81605.rs:+1:17: +1:41
      }
  
      bb3: {
          StorageDead(_4);                 // scope 0 at $DIR/issue_81605.rs:+1:40: +1:41
-         _2 = Add(const 1_i32, move _3);  // scope 0 at $DIR/issue_81605.rs:+1:13: +1:41
+         _2 = const 2_i32;                // scope 0 at $DIR/issue_81605.rs:+1:13: +1:41
          StorageDead(_3);                 // scope 0 at $DIR/issue_81605.rs:+1:40: +1:41
          StorageLive(_5);                 // scope 1 at $DIR/issue_81605.rs:+2:5: +2:26
          StorageLive(_6);                 // scope 1 at $DIR/issue_81605.rs:+2:24: +2:25
-         _6 = _2;                         // scope 1 at $DIR/issue_81605.rs:+2:24: +2:25
-         _5 = exit(move _6);              // scope 1 at $DIR/issue_81605.rs:+2:5: +2:26
+         _6 = const 2_i32;                // scope 1 at $DIR/issue_81605.rs:+2:24: +2:25
+         _5 = exit(const 2_i32);          // scope 1 at $DIR/issue_81605.rs:+2:5: +2:26
                                           // mir::Constant
                                           // + span: $DIR/issue_81605.rs:6:5: 6:23
                                           // + literal: Const { ty: fn(i32) -> ! {exit}, val: Value(<ZST>) }
      }
  }
  
