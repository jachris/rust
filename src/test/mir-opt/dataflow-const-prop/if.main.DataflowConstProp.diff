- // MIR for `main` before DataflowConstProp
+ // MIR for `main` after DataflowConstProp
  
  fn main() -> () {
      let mut _0: ();                      // return place in scope 0 at $DIR/if.rs:+0:11: +0:11
      let _1: i32;                         // in scope 0 at $DIR/if.rs:+1:9: +1:10
      let mut _3: bool;                    // in scope 0 at $DIR/if.rs:+2:16: +2:24
      let mut _4: i32;                     // in scope 0 at $DIR/if.rs:+2:16: +2:19
      let mut _5: &i32;                    // in scope 0 at $DIR/if.rs:+2:17: +2:19
      let mut _7: i32;                     // in scope 0 at $DIR/if.rs:+3:13: +3:14
      let mut _9: bool;                    // in scope 0 at $DIR/if.rs:+5:16: +5:24
      let mut _10: i32;                    // in scope 0 at $DIR/if.rs:+5:16: +5:19
      let mut _11: &i32;                   // in scope 0 at $DIR/if.rs:+5:17: +5:19
      let mut _12: i32;                    // in scope 0 at $DIR/if.rs:+5:38: +5:39
      let mut _14: i32;                    // in scope 0 at $DIR/if.rs:+6:13: +6:14
      scope 1 {
          debug a => _1;                   // in scope 1 at $DIR/if.rs:+1:9: +1:10
          let _2: i32;                     // in scope 1 at $DIR/if.rs:+2:9: +2:10
          scope 2 {
              debug b => _2;               // in scope 2 at $DIR/if.rs:+2:9: +2:10
              let _6: i32;                 // in scope 2 at $DIR/if.rs:+3:9: +3:10
              scope 3 {
                  debug c => _6;           // in scope 3 at $DIR/if.rs:+3:9: +3:10
                  let _8: i32;             // in scope 3 at $DIR/if.rs:+5:9: +5:10
                  scope 4 {
                      debug d => _8;       // in scope 4 at $DIR/if.rs:+5:9: +5:10
                      let _13: i32;        // in scope 4 at $DIR/if.rs:+6:9: +6:10
                      scope 5 {
                          debug e => _13;  // in scope 5 at $DIR/if.rs:+6:9: +6:10
                      }
                  }
              }
          }
      }
  
      bb0: {
          StorageLive(_1);                 // scope 0 at $DIR/if.rs:+1:9: +1:10
          _1 = const 1_i32;                // scope 0 at $DIR/if.rs:+1:13: +1:14
          StorageLive(_2);                 // scope 1 at $DIR/if.rs:+2:9: +2:10
          StorageLive(_3);                 // scope 1 at $DIR/if.rs:+2:16: +2:24
          StorageLive(_4);                 // scope 1 at $DIR/if.rs:+2:16: +2:19
          StorageLive(_5);                 // scope 1 at $DIR/if.rs:+2:17: +2:19
          _5 = &_1;                        // scope 1 at $DIR/if.rs:+2:17: +2:19
-         _4 = (*_5);                      // scope 1 at $DIR/if.rs:+2:16: +2:19
-         _3 = Eq(move _4, const 1_i32);   // scope 1 at $DIR/if.rs:+2:16: +2:24
+         _4 = const 1_i32;                // scope 1 at $DIR/if.rs:+2:16: +2:19
+         _3 = const true;                 // scope 1 at $DIR/if.rs:+2:16: +2:24
          StorageDead(_5);                 // scope 1 at $DIR/if.rs:+2:23: +2:24
          StorageDead(_4);                 // scope 1 at $DIR/if.rs:+2:23: +2:24
-         switchInt(move _3) -> [false: bb2, otherwise: bb1]; // scope 1 at $DIR/if.rs:+2:16: +2:24
+         switchInt(const true) -> [false: bb2, otherwise: bb1]; // scope 1 at $DIR/if.rs:+2:16: +2:24
      }
  
      bb1: {
          _2 = const 2_i32;                // scope 1 at $DIR/if.rs:+2:27: +2:28
          goto -> bb3;                     // scope 1 at $DIR/if.rs:+2:13: +2:41
      }
  
      bb2: {
          _2 = const 3_i32;                // scope 1 at $DIR/if.rs:+2:38: +2:39
          goto -> bb3;                     // scope 1 at $DIR/if.rs:+2:13: +2:41
      }
  
      bb3: {
          StorageDead(_3);                 // scope 1 at $DIR/if.rs:+2:40: +2:41
          StorageLive(_6);                 // scope 2 at $DIR/if.rs:+3:9: +3:10
          StorageLive(_7);                 // scope 2 at $DIR/if.rs:+3:13: +3:14
-         _7 = _2;                         // scope 2 at $DIR/if.rs:+3:13: +3:14
-         _6 = Add(move _7, const 1_i32);  // scope 2 at $DIR/if.rs:+3:13: +3:18
+         _7 = const 2_i32;                // scope 2 at $DIR/if.rs:+3:13: +3:14
+         _6 = const 3_i32;                // scope 2 at $DIR/if.rs:+3:13: +3:18
          StorageDead(_7);                 // scope 2 at $DIR/if.rs:+3:17: +3:18
          StorageLive(_8);                 // scope 3 at $DIR/if.rs:+5:9: +5:10
          StorageLive(_9);                 // scope 3 at $DIR/if.rs:+5:16: +5:24
          StorageLive(_10);                // scope 3 at $DIR/if.rs:+5:16: +5:19
          StorageLive(_11);                // scope 3 at $DIR/if.rs:+5:17: +5:19
          _11 = &_1;                       // scope 3 at $DIR/if.rs:+5:17: +5:19
-         _10 = (*_11);                    // scope 3 at $DIR/if.rs:+5:16: +5:19
-         _9 = Eq(move _10, const 1_i32);  // scope 3 at $DIR/if.rs:+5:16: +5:24
+         _10 = const 1_i32;               // scope 3 at $DIR/if.rs:+5:16: +5:19
+         _9 = const true;                 // scope 3 at $DIR/if.rs:+5:16: +5:24
          StorageDead(_11);                // scope 3 at $DIR/if.rs:+5:23: +5:24
          StorageDead(_10);                // scope 3 at $DIR/if.rs:+5:23: +5:24
-         switchInt(move _9) -> [false: bb5, otherwise: bb4]; // scope 3 at $DIR/if.rs:+5:16: +5:24
+         switchInt(const true) -> [false: bb5, otherwise: bb4]; // scope 3 at $DIR/if.rs:+5:16: +5:24
      }
  
      bb4: {
-         _8 = _1;                         // scope 3 at $DIR/if.rs:+5:27: +5:28
+         _8 = const 1_i32;                // scope 3 at $DIR/if.rs:+5:27: +5:28
          goto -> bb6;                     // scope 3 at $DIR/if.rs:+5:13: +5:45
      }
  
      bb5: {
          StorageLive(_12);                // scope 3 at $DIR/if.rs:+5:38: +5:39
          _12 = _1;                        // scope 3 at $DIR/if.rs:+5:38: +5:39
          _8 = Add(move _12, const 1_i32); // scope 3 at $DIR/if.rs:+5:38: +5:43
          StorageDead(_12);                // scope 3 at $DIR/if.rs:+5:42: +5:43
          goto -> bb6;                     // scope 3 at $DIR/if.rs:+5:13: +5:45
      }
  
      bb6: {
          StorageDead(_9);                 // scope 3 at $DIR/if.rs:+5:44: +5:45
          StorageLive(_13);                // scope 4 at $DIR/if.rs:+6:9: +6:10
          StorageLive(_14);                // scope 4 at $DIR/if.rs:+6:13: +6:14
-         _14 = _8;                        // scope 4 at $DIR/if.rs:+6:13: +6:14
-         _13 = Add(move _14, const 1_i32); // scope 4 at $DIR/if.rs:+6:13: +6:18
+         _14 = const 1_i32;               // scope 4 at $DIR/if.rs:+6:13: +6:14
+         _13 = const 2_i32;               // scope 4 at $DIR/if.rs:+6:13: +6:18
          StorageDead(_14);                // scope 4 at $DIR/if.rs:+6:17: +6:18
          _0 = const ();                   // scope 0 at $DIR/if.rs:+0:11: +7:2
          StorageDead(_13);                // scope 4 at $DIR/if.rs:+7:1: +7:2
          StorageDead(_8);                 // scope 3 at $DIR/if.rs:+7:1: +7:2
          StorageDead(_6);                 // scope 2 at $DIR/if.rs:+7:1: +7:2
          StorageDead(_2);                 // scope 1 at $DIR/if.rs:+7:1: +7:2
          StorageDead(_1);                 // scope 0 at $DIR/if.rs:+7:1: +7:2
          return;                          // scope 0 at $DIR/if.rs:+7:2: +7:2
      }
  }
  
