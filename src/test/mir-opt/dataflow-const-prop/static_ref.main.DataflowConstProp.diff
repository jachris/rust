- // MIR for `main` before DataflowConstProp
+ // MIR for `main` after DataflowConstProp
  
  fn main() -> () {
      let mut _0: ();                      // return place in scope 0 at $DIR/static_ref.rs:+0:11: +0:11
      let _1: i32;                         // in scope 0 at $DIR/static_ref.rs:+2:9: +2:10
      let mut _3: &i32;                    // in scope 0 at $DIR/static_ref.rs:+4:9: +4:11
      let _4: &i32;                        // in scope 0 at $DIR/static_ref.rs:+4:9: +4:11
      let _5: &i32;                        // in scope 0 at $DIR/static_ref.rs:+4:10: +4:11
      scope 1 {
          debug x => _1;                   // in scope 1 at $DIR/static_ref.rs:+2:9: +2:10
          let mut _2: &i32;                // in scope 1 at $DIR/static_ref.rs:+3:9: +3:14
          scope 2 {
              debug r => _2;               // in scope 2 at $DIR/static_ref.rs:+3:9: +3:14
              let _6: i32;                 // in scope 2 at $DIR/static_ref.rs:+5:9: +5:10
              scope 3 {
                  debug y => _6;           // in scope 3 at $DIR/static_ref.rs:+5:9: +5:10
              }
          }
      }
  
      bb0: {
          StorageLive(_1);                 // scope 0 at $DIR/static_ref.rs:+2:9: +2:10
          _1 = const 0_i32;                // scope 0 at $DIR/static_ref.rs:+2:13: +2:14
          StorageLive(_2);                 // scope 1 at $DIR/static_ref.rs:+3:9: +3:14
          _2 = &_1;                        // scope 1 at $DIR/static_ref.rs:+3:17: +3:19
          StorageLive(_3);                 // scope 2 at $DIR/static_ref.rs:+4:9: +4:11
          StorageLive(_4);                 // scope 2 at $DIR/static_ref.rs:+4:9: +4:11
          StorageLive(_5);                 // scope 2 at $DIR/static_ref.rs:+4:10: +4:11
          _5 = const {alloc1: &i32};       // scope 2 at $DIR/static_ref.rs:+4:10: +4:11
                                           // mir::Constant
                                           // + span: $DIR/static_ref.rs:8:10: 8:11
                                           // + literal: Const { ty: &i32, val: Value(Scalar(alloc1)) }
          _4 = &(*_5);                     // scope 2 at $DIR/static_ref.rs:+4:9: +4:11
          _3 = &(*_4);                     // scope 2 at $DIR/static_ref.rs:+4:9: +4:11
          _2 = move _3;                    // scope 2 at $DIR/static_ref.rs:+4:5: +4:11
          StorageDead(_3);                 // scope 2 at $DIR/static_ref.rs:+4:10: +4:11
          StorageDead(_5);                 // scope 2 at $DIR/static_ref.rs:+4:11: +4:12
          StorageDead(_4);                 // scope 2 at $DIR/static_ref.rs:+4:11: +4:12
          StorageLive(_6);                 // scope 2 at $DIR/static_ref.rs:+5:9: +5:10
          _6 = (*_2);                      // scope 2 at $DIR/static_ref.rs:+5:13: +5:15
          _0 = const ();                   // scope 0 at $DIR/static_ref.rs:+0:11: +6:2
          StorageDead(_6);                 // scope 2 at $DIR/static_ref.rs:+6:1: +6:2
          StorageDead(_2);                 // scope 1 at $DIR/static_ref.rs:+6:1: +6:2
          StorageDead(_1);                 // scope 0 at $DIR/static_ref.rs:+6:1: +6:2
          return;                          // scope 0 at $DIR/static_ref.rs:+6:2: +6:2
      }
  }
  
  alloc1 (static: P, size: 4, align: 4) {
      05 00 00 00                                     â”‚ ....
  }
  
